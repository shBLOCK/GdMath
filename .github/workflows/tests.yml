name: Tests

on:
  workflow_run:
    workflows: [Codegen]
    types: [completed]

jobs:
  tests:
    runs-on: ${{ matrix.platform }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: true
      matrix:
#        python: ["3.3", "3.4", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
        python: ["3.11"]
#        platform: ["windows-latest", "ubuntu-latest", "macos-latest"]
        platform: ["ubuntu-latest"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          sparse-checkout: |
            codegen
            tests

      - name: Download Codegen Output
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "codegen_results"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/codegen_results.zip`, Buffer.from(download.data));

      - name: Determine OS
        id: determine-os
        run: echo "::set-output name=os::$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')"

      - name: Unzip
        run: |
          if [[ "${{ steps.determine-os.outputs.os }}" == "ubuntu" ]]; then
            unzip codegen_results.zip -d src/gdmath
          elif [[ "${{ steps.determine-os.outputs.os }}" == "macos" ]]; then
            unzip codegen_results.zip -d src/gdmath
          elif [[ "${{ steps.determine-os.outputs.os }}" == "windows" ]]; then
            7z x codegen_results.zip -osrc/gdmath
          else
            echo "Unsupported OS"
            exit 1
          fi

      - name: Test Download
        run: dir src\gdmath

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Build
        run: pip install .

      - name: Test
        run: pytest tests
